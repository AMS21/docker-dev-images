name: trivy analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '0 3 * * *'

permissions:
  contents: read

jobs:
  build:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status

    name: Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        image:
          - { name: "dev-alpine:latest", path: "Alpine/latest" }
          - { name: "dev-ubuntu:22.04",  path: "Ubuntu/22.04" }
          - { name: "dev-ubuntu:20.04",  path: "Ubuntu/20.04" }
          - { name: "dev-ubuntu:18.04",  path: "Ubuntu/18.04" }
          - { name: "dev-ubuntu:16.04",  path: "Ubuntu/16.04" }

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build an image from Dockerfile
        run: |
          docker build -t "ams21/${{ matrix.image.name }}" ${{ matrix.image.path }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.16.0
        with:
          image-ref: 'ams21/${{ matrix.image.name }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
